import com.formdev.flatlaf.FlatIntelliJLaf;
import com.formdev.flatlaf.FlatLaf;
import com.formdev.flatlaf.fonts.roboto.FlatRobotoFont;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Numan
 */
public class malzeme extends javax.swing.JFrame {

    /**
     * Creates new form malzeme
     */
    public malzeme() {
        initComponents();
                
        malzemeTableModel = new DefaultTableModel(new Object[]{"Malzeme Adı", "Malzeme Birim", "Toplam Miktar", "Birim Fiyat"}, 0);
        malzemetbl.setModel(malzemeTableModel);
        
        loadMalzemeTablosu();
        
        sayfacombo.setSelectedItem("MALZEME DÜZENLE");
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        malzemetbl = new javax.swing.JTable();
        sayfacombo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        malzemeadtf = new javax.swing.JTextField();
        birimfiyattf = new javax.swing.JTextField();
        toplammiktartf = new javax.swing.JTextField();
        birimcb = new javax.swing.JComboBox<>();
        yenimalzemeeklebtn = new javax.swing.JButton();
        varolanıgüncellebtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        malzemeadeklecikartf = new javax.swing.JTextField();
        eklecikaralanitf = new javax.swing.JLabel();
        miktartf = new javax.swing.JTextField();
        eklebtn = new javax.swing.JButton();
        cikarbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        malzemetbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        malzemetbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                malzemetblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(malzemetbl);

        sayfacombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TARİF LİSTESİ", "TARİF EKLE", "TARİF SİL", "TARİF GÜNCELLE", "MALZEME DÜZENLE" }));
        sayfacombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sayfacomboActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("MALZEME ADI:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("BİRİM:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("BİRİM FİYAT:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("TOPLAM MİKTAR:");

        toplammiktartf.setFocusable(false);

        birimcb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ADET", "KG", "GRAM", "LİTRE", "ML", "BARDAK", "KAŞIK" }));

        yenimalzemeeklebtn.setText("YENİ MALZEME EKLE");
        yenimalzemeeklebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yenimalzemeeklebtnActionPerformed(evt);
            }
        });

        varolanıgüncellebtn.setText("VAR OLANI GÜNCELLE");
        varolanıgüncellebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varolanıgüncellebtnActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("MALZEME ADI:");

        malzemeadeklecikartf.setFocusable(false);

        eklecikaralanitf.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        eklecikaralanitf.setText("MİKTAR:");

        eklebtn.setText("EKLE");
        eklebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eklebtnActionPerformed(evt);
            }
        });

        cikarbtn.setText("ÇIKAR");
        cikarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cikarbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sayfacombo, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(eklebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cikarbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(eklecikaralanitf)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(miktartf, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(35, 35, 35)
                                    .addComponent(malzemeadeklecikartf, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(166, 166, 166))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(malzemeadtf, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(birimfiyattf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(birimcb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(toplammiktartf, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(yenimalzemeeklebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(varolanıgüncellebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(169, 169, 169))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sayfacombo, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(malzemeadtf, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(birimcb, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(birimfiyattf, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(toplammiktartf, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(yenimalzemeeklebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(varolanıgüncellebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(malzemeadeklecikartf, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eklecikaralanitf)
                            .addComponent(miktartf, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eklebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cikarbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(149, Short.MAX_VALUE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void yenimalzemeeklebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yenimalzemeeklebtnActionPerformed
        String malzemeAdi = malzemeadtf.getText();
        String malzemeBirim = (String) birimcb.getSelectedItem();
        double birimFiyat = Double.parseDouble(birimfiyattf.getText());
        int toplamMiktar = Integer.parseInt(toplammiktartf.getText());

        try (Connection conn = DriverManager.getConnection(DB_URL, USER, PASS)) {
            String checkQuery = "SELECT COUNT(*) FROM malzemeler WHERE MalzemeAdi = ?";
            try (PreparedStatement checkStmt = conn.prepareStatement(checkQuery)) {
                checkStmt.setString(1, malzemeAdi);
                ResultSet rs = checkStmt.executeQuery();
                if (rs.next() && rs.getInt(1) > 0) {
                    JOptionPane.showMessageDialog(this, "Bu malzeme zaten mevcut!");
                    return;
                }
            }

            String insertQuery = "INSERT INTO malzemeler (MalzemeAdi, MalzemeBirim, ToplamMiktar, BirimFiyat) VALUES (?, ?, ?, ?)";
            try (PreparedStatement pstmt = conn.prepareStatement(insertQuery)) {
                pstmt.setString(1, malzemeAdi);
                pstmt.setString(2, malzemeBirim);
                pstmt.setInt(3, toplamMiktar);
                pstmt.setDouble(4, birimFiyat);
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Malzeme başarıyla eklendi!");
                loadMalzemeTablosu(); 
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_yenimalzemeeklebtnActionPerformed

    private void malzemetblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_malzemetblMouseClicked
        int selectedRow = malzemetbl.getSelectedRow();
        if (selectedRow != -1) {
            String malzemeAdi = (String) malzemeTableModel.getValueAt(selectedRow, 0);
            String malzemeBirim = (String) malzemeTableModel.getValueAt(selectedRow, 1);
            int toplamMiktar = (Integer) malzemeTableModel.getValueAt(selectedRow, 2);
            double birimFiyat = (Double) malzemeTableModel.getValueAt(selectedRow, 3);

            malzemeadtf.setText(malzemeAdi);
            malzemeadeklecikartf.setText(malzemeAdi);
            birimcb.setSelectedItem(malzemeBirim);
            birimfiyattf.setText(String.valueOf(birimFiyat));
            toplammiktartf.setText(String.valueOf(toplamMiktar));
            miktartf.setText("");
        }
    }//GEN-LAST:event_malzemetblMouseClicked

    private void varolanıgüncellebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varolanıgüncellebtnActionPerformed
        int selectedRow = malzemetbl.getSelectedRow();
        String malzemeAdi = (String) malzemeTableModel.getValueAt(selectedRow, 0);

        String newmalzemeAdi = malzemeadtf.getText();
        String malzemeBirim = (String) birimcb.getSelectedItem();
        double birimFiyat = Double.parseDouble(birimfiyattf.getText());

        try (Connection conn = DriverManager.getConnection(DB_URL, USER, PASS)) {
            String updateQuery = "UPDATE malzemeler SET MalzemeBirim = ?, BirimFiyat = ?, MalzemeAdi = ? WHERE MalzemeAdi = ?";
            try (PreparedStatement pstmt = conn.prepareStatement(updateQuery)) {
                pstmt.setString(1, malzemeBirim);
                pstmt.setDouble(2, birimFiyat);
                pstmt.setString(3, newmalzemeAdi);
                pstmt.setString(4, malzemeAdi); 
                pstmt.executeUpdate();

                JOptionPane.showMessageDialog(this, "Malzeme başarıyla güncellendi!");
                loadMalzemeTablosu(); 
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_varolanıgüncellebtnActionPerformed

    private void eklebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eklebtnActionPerformed
        miktarGuncelle(true);
    }//GEN-LAST:event_eklebtnActionPerformed

    private void cikarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cikarbtnActionPerformed
        miktarGuncelle(false);
    }//GEN-LAST:event_cikarbtnActionPerformed

    private void sayfacomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sayfacomboActionPerformed
        if (sayfacombo.getSelectedItem().equals("TARİF LİSTESİ")) {
            new tariflistesi().setVisible(true);
            dispose();
        }
        
        else if (sayfacombo.getSelectedItem().equals("TARİF EKLE")) {
            new tarifekleme().setVisible(true);
            dispose();
            
        }
        
        
        else if (sayfacombo.getSelectedItem().equals("TARİF SİL")) {
            new tarifsilme().setVisible(true);
            dispose();
            
        }
        
        else if (sayfacombo.getSelectedItem().equals("TARİF GÜNCELLE")) {
            new tarifguncelleme().setVisible(true);
            dispose();
        }
        
        else if (sayfacombo.getSelectedItem().equals("MALZEME DÜZENLE")) {
            
        }
    }//GEN-LAST:event_sayfacomboActionPerformed

    
    private static final String DB_URL = "jdbc:mysql://localhost:3306/yemektarif?zeroDateTimeBehavior=CONVERT_TO_NULL";
    private static final String USER = "root";
    private static final String PASS = "kirpi1974";
    
    private DefaultTableModel malzemeTableModel;
    
    private void loadMalzemeTablosu() {
        malzemeTableModel.setRowCount(0);
        try (Connection conn = DriverManager.getConnection(DB_URL, USER, PASS)) {
            String query = "SELECT MalzemeAdi, MalzemeBirim, ToplamMiktar, BirimFiyat FROM malzemeler";
            try (PreparedStatement pstmt = conn.prepareStatement(query);
                 ResultSet rs = pstmt.executeQuery()) {
                while (rs.next()) {
                    String malzemeAdi = rs.getString("MalzemeAdi");
                    String malzemeBirim = rs.getString("MalzemeBirim");
                    int toplamMiktar = rs.getInt("ToplamMiktar");
                    double birimFiyat = rs.getDouble("BirimFiyat");
                    malzemeTableModel.addRow(new Object[]{malzemeAdi, malzemeBirim, toplamMiktar, birimFiyat});
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    
    private void yeniMalzemeEkle() {
        String malzemeAdi = malzemeadtf.getText();
        String malzemeBirim = (String) birimcb.getSelectedItem();
        double birimFiyat = Double.parseDouble(birimfiyattf.getText());
        int toplamMiktar = Integer.parseInt(toplammiktartf.getText());

        try (Connection conn = DriverManager.getConnection(DB_URL, USER, PASS)) {
            String checkQuery = "SELECT COUNT(*) FROM malzemeler WHERE MalzemeAdi = ?";
            try (PreparedStatement checkStmt = conn.prepareStatement(checkQuery)) {
                checkStmt.setString(1, malzemeAdi);
                ResultSet rs = checkStmt.executeQuery();
                if (rs.next() && rs.getInt(1) > 0) {
                    JOptionPane.showMessageDialog(this, "Bu malzeme zaten mevcut!");
                    return;
                }
            }

            String insertQuery = "INSERT INTO malzemeler (MalzemeAdi, MalzemeBirim, ToplamMiktar, BirimFiyat) VALUES (?, ?, ?, ?)";
            try (PreparedStatement pstmt = conn.prepareStatement(insertQuery)) {
                pstmt.setString(1, malzemeAdi);
                pstmt.setString(2, malzemeBirim);
                pstmt.setInt(3, toplamMiktar);
                pstmt.setDouble(4, birimFiyat);
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Malzeme başarıyla eklendi!");
                loadMalzemeTablosu();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    private void varolanMalzemeyiGuncelle() {
        String malzemeAdi = malzemeadtf.getText();
        String malzemeBirim = (String) birimcb.getSelectedItem();
        double birimFiyat = Double.parseDouble(birimfiyattf.getText());

        try (Connection conn = DriverManager.getConnection(DB_URL, USER, PASS)) {
            String updateQuery = "UPDATE malzemeler SET MalzemeBirim = ?, BirimFiyat = ? WHERE MalzemeAdi = ?";
            try (PreparedStatement pstmt = conn.prepareStatement(updateQuery)) {
                pstmt.setString(1, malzemeBirim);
                pstmt.setDouble(2, birimFiyat);
                pstmt.setString(3, malzemeAdi);
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Malzeme başarıyla güncellendi!");
                loadMalzemeTablosu(); 
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    
    private void miktarGuncelle(boolean ekle) {
        String malzemeAdi = malzemeadeklecikartf.getText();
        int miktar = Integer.parseInt(miktartf.getText());

        try (Connection conn = DriverManager.getConnection(DB_URL, USER, PASS)) {
            String updateQuery = "UPDATE malzemeler SET ToplamMiktar = ToplamMiktar " + (ekle ? "+ ?" : "- ?") + " WHERE MalzemeAdi = ?";
            System.out.println(updateQuery);
            try (PreparedStatement pstmt = conn.prepareStatement(updateQuery)) {
                pstmt.setInt(1, miktar);
                pstmt.setString(2, malzemeAdi);
                pstmt.executeUpdate();
                loadMalzemeTablosu(); 
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    
    
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatRobotoFont.install();
        FlatLaf.registerCustomDefaultsSource("raven.combobox");
        UIManager.put("defaultFont", new Font(FlatRobotoFont.FAMILY, Font.PLAIN, 13));
        FlatIntelliJLaf.setup();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new malzeme().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> birimcb;
    private javax.swing.JTextField birimfiyattf;
    private javax.swing.JButton cikarbtn;
    private javax.swing.JButton eklebtn;
    private javax.swing.JLabel eklecikaralanitf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField malzemeadeklecikartf;
    private javax.swing.JTextField malzemeadtf;
    private javax.swing.JTable malzemetbl;
    private javax.swing.JTextField miktartf;
    private javax.swing.JComboBox<String> sayfacombo;
    private javax.swing.JTextField toplammiktartf;
    private javax.swing.JButton varolanıgüncellebtn;
    private javax.swing.JButton yenimalzemeeklebtn;
    // End of variables declaration//GEN-END:variables
}
