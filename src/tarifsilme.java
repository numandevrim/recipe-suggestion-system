
import com.formdev.flatlaf.FlatIntelliJLaf;
import com.formdev.flatlaf.FlatLaf;
import com.formdev.flatlaf.fonts.roboto.FlatRobotoFont;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Numan
 */
public class tarifsilme extends javax.swing.JFrame {

    /**
     * Creates new form tarifsilme
     */
    public tarifsilme() {
        initComponents();
        
        
        tarifTableModel = new DefaultTableModel(new String[]{"Tarif Adı", "Kategori"}, 0);
        tariftbl.setModel(tarifTableModel);
        
        loadTariflerFromDatabase();
        
        sayfacombo.setSelectedItem("TARİF SİL");
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        aratf = new javax.swing.JTextField();
        arabtn = new javax.swing.JButton();
        sayfacombo = new javax.swing.JComboBox<>();
        silbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tariftbl = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        arabtn.setText("ARA");
        arabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arabtnActionPerformed(evt);
            }
        });

        sayfacombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TARİF LİSTESİ", "TARİF EKLE", "TARİF SİL", "TARİF GÜNCELLE", "MALZEME DÜZENLE" }));
        sayfacombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sayfacomboActionPerformed(evt);
            }
        });

        silbtn.setText("SİL");
        silbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                silbtnActionPerformed(evt);
            }
        });

        tariftbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tariftbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(aratf, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(arabtn, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(silbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(sayfacombo, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(silbtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sayfacombo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .addComponent(arabtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(aratf))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
    
    
    
    
    
    
    
    
    private void silbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_silbtnActionPerformed
        
        int selectedRow = tariftbl.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Silinecek tarif seçin.");
            return;
        }

        String tarifAdi = (String) tarifTableModel.getValueAt(selectedRow, 0);

        try (Connection conn = DriverManager.getConnection(DB_URL, USER, PASS)) {
            String deleteTarifQuery = "DELETE FROM tarifler WHERE TarifAdi = ?";
            try (PreparedStatement pstmt = conn.prepareStatement(deleteTarifQuery)) {
                pstmt.setString(1, tarifAdi);
                pstmt.executeUpdate();
            }

            String deleteMalzemelerQuery = "DELETE FROM tarifmalzeme WHERE TarifID IN (SELECT TarifID FROM tarifler WHERE TarifAdi = ?)";
            try (PreparedStatement pstmt = conn.prepareStatement(deleteMalzemelerQuery)) {
                pstmt.setString(1, tarifAdi);
                pstmt.executeUpdate();
            }

            JOptionPane.showMessageDialog(this, "Tarif ve ilişkili malzemeler silindi.");
            loadTariflerFromDatabase(); 
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Silme işlemi sırasında hata oluştu: " + e.getMessage());
        }
        
        
    }//GEN-LAST:event_silbtnActionPerformed

    private void arabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arabtnActionPerformed
        
        String searchTerm = aratf.getText().trim();
        tarifTableModel.setRowCount(0); 
        try (Connection conn = DriverManager.getConnection(DB_URL, USER, PASS)) {
            String searchQuery = "SELECT TarifAdi, Kategori FROM tarifler WHERE TarifAdi LIKE ?";
            try (PreparedStatement pstmt = conn.prepareStatement(searchQuery)) {
                pstmt.setString(1, "%" + searchTerm + "%");
                try (ResultSet rs = pstmt.executeQuery()) {
                    while (rs.next()) {
                        String tarifAdi = rs.getString("TarifAdi");
                        String kategori = rs.getString("Kategori");
                        tarifTableModel.addRow(new Object[]{tarifAdi, kategori});
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Arama sırasında hata oluştu: " + e.getMessage());
        }
        
        
    }//GEN-LAST:event_arabtnActionPerformed

    private void sayfacomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sayfacomboActionPerformed
        if (sayfacombo.getSelectedItem().equals("TARİF LİSTESİ")) {
            new tariflistesi().setVisible(true);
            dispose();
        }
        
        else if (sayfacombo.getSelectedItem().equals("TARİF EKLE")) {
            new tarifekleme().setVisible(true);
            dispose();
            
        }
        
        
        else if (sayfacombo.getSelectedItem().equals("TARİF SİL")) {
            
            
        }
        
        else if (sayfacombo.getSelectedItem().equals("TARİF GÜNCELLE")) {
            new tarifguncelleme().setVisible(true);
            dispose();
        }
        
        else if (sayfacombo.getSelectedItem().equals("MALZEME DÜZENLE")) {
            new malzeme().setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_sayfacomboActionPerformed

    
    private static final String DB_URL = "jdbc:mysql://localhost:3306/yemektarif?zeroDateTimeBehavior=CONVERT_TO_NULL";
    private static final String USER = "root";
    private static final String PASS = "kirpi1974";
    
    private DefaultTableModel tarifTableModel;
    
    
    
    
    private void loadTariflerFromDatabase() {
        tarifTableModel.setRowCount(0); 
        try (Connection conn = DriverManager.getConnection(DB_URL, USER, PASS)) {
            String selectQuery = "SELECT TarifAdi, Kategori FROM tarifler";
            try (PreparedStatement pstmt = conn.prepareStatement(selectQuery);
                 ResultSet rs = pstmt.executeQuery()) {
                while (rs.next()) {
                    String tarifAdi = rs.getString("TarifAdi");
                    String kategori = rs.getString("Kategori");
                    tarifTableModel.addRow(new Object[]{tarifAdi, kategori});
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Veri yükleme sırasında hata oluştu: " + e.getMessage());
        }
    }
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatRobotoFont.install();
        FlatLaf.registerCustomDefaultsSource("raven.combobox");
        UIManager.put("defaultFont", new Font(FlatRobotoFont.FAMILY, Font.PLAIN, 13));
        FlatIntelliJLaf.setup();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tarifsilme().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton arabtn;
    private javax.swing.JTextField aratf;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> sayfacombo;
    private javax.swing.JButton silbtn;
    private javax.swing.JTable tariftbl;
    // End of variables declaration//GEN-END:variables
}
